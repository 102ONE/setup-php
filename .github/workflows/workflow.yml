name: Main workflow
on:
  pull_request:
    branches:
      - master
      - develop
      - verbose
    paths-ignore:
      - '**.md'
  push:
    branches:
      - master
      - develop
      - verbose
    paths-ignore:
      - '**.md'
jobs:
  run:
    name: Run
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest, windows-latest, macOS-latest]
        php-versions: ['5.6', '7.0', '7.1', '7.2', '7.3']
    steps:
      - name: Checkout
        uses: actions/checkout@master
        with:
          fetch-depth: 1

      - name: Setup Node.js 12.x
        uses: actions/setup-node@master
        with:
          node-version: 12.x

      - name: Get npm cache directory
        id: npm-cache
        run: echo "::set-output name=dir::$(npm config get cache)"

      - name: Install dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Installing NPM packages
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install

      - name: Prettier Format Check
        run: npm run format-check

      - name: ESLint Check
        run: npm run lint

      - name: Run tests
        run: npm test

      - name: Send Coverage
        continue-on-error: true
        timeout-minutes: 1
        run: curl -s https://codecov.io/bash | bash -s -- -t ${{secrets.CODECOV_TOKEN}} -f coverage/clover.xml -n github-actions-codecov-${{ matrix.operating-system }}-php${{ matrix.php-versions }}

      - name: Setup PHP with extensions and custom config
        run: node dist/index.js
        env:
          php-version: ${{ matrix.php-versions }}
          extension-csv: mbstring, xdebug, pcov #optional
          ini-values-csv: post_max_size=256M, short_open_tag=On, date.timezone=Asia/Kolkata #optional

      - name: Testing PHP version
        run: php -v
      - name: Testing Composer version
        run: composer -V
      - name: Testing Extensions
        run: php -m
      - name: Testing ini values
        run: |
          printf "post_max_size: %s\n" $(php -r "echo ini_get('post_max_size');")
          printf "short_open_tag: %s\n" $(php -r "echo ini_get('short_open_tag');")
          printf "date.timezone: %s\n" $(php -r "echo ini_get('date.timezone');")